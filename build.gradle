apply from: './scripts/secrets.gradle'
apply plugin: "detekt-setup"
apply plugin: "org.sonarqube"

buildscript {
    ext {
        // App version
        versionName = '4.0.1'
        versionCode = 210

        // SDK and tools
        compileSdkVersion = 34
        minSdkVersion = 26
        targetSdkVersion = 34

        composeCompilerVersion = '1.5.14'

        withoutBasic = { exclude group: 'jp.co.soramitsu.xnetworking', module: 'basic' }
        withoutJna = { exclude group: 'net.java.dev.jna' }
        withoutJavaWS = { exclude module: 'java-websocket-lib' }
    }

    repositories {
        google()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'https://maven.google.com' }
    }
    dependencies {
        classpath libs.gradleplugins.android
        classpath libs.gradleplugins.kotlin
        classpath libs.kotlin.serialization
        classpath libs.google.services
        classpath libs.firebase.appdistribution.gradle
        classpath libs.play.publisher
        classpath libs.gradleplugins.hiltAndroid
        classpath libs.org.jacoco.core
        classpath libs.sonarqube.gradle.plugin
    }

    configurations.configureEach {
        resolutionStrategy {
            cacheChangingModulesFor 0, 'seconds'
        }
    }
}

allprojects {
    repositories {
        google()
        mavenLocal()
        maven { url "https://nexus.iroha.tech/repository/maven-soramitsu/" }
        mavenCentral()
        maven { url "https://jitpack.io" }

        maven {
            url = readSecret("PAY_WINGS_REPOSITORY_URL")
            credentials {
                username = readSecret("PAY_WINGS_USERNAME")
                password = readSecret("PAY_WINGS_PASSWORD")
            }
        }
    }

    configurations {
        cleanedAnnotations
        implementation.exclude group: 'com.intellij' , module:'annotations'
    }

    configurations.configureEach {
        resolutionStrategy {
            // add dependency substitution rules
            dependencySubstitution {
                substitute module('org.bouncycastle:bcprov-jdk15on') using module('org.bouncycastle:bcprov-jdk18on:1.78')
            }
        }
    }
}

tasks.register('clean', Delete) {
    delete rootProject.layout.buildDirectory
}

tasks.register('runTest', GradleBuild) {
    tasks = ['clean', 'detektAll', 'runModuleTests', 'jacocoTestReport']
}