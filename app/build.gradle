import com.github.triplet.gradle.androidpublisher.ReleaseStatus

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'com.google.firebase.appdistribution'
apply plugin: "com.github.triplet.play"
apply from: "../scripts/versions.gradle"

android {
    compileSdk rootProject.compileSdkVersion
    defaultConfig {
        applicationId "jp.co.soramitsu.fearless"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode computeVersionCode()
        versionName computeVersionName()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        ci {
            storeFile file(System.env.CI_KEYSTORE_PATH ?: "../debug-keystore.jks")
            storePassword System.env.CI_KEYSTORE_PASS ?: "00000000"
            keyAlias System.env.CI_KEYSTORE_KEY_ALIAS ?: "fearless"
            keyPassword System.env.CI_KEYSTORE_KEY_PASS ?: "00000000"
        }
        debug {
            storeFile file("../debug-keystore.jks")
            storePassword "00000000"
            keyAlias "fearless"
            keyPassword "00000000"
        }
    }

    // Minify is needed for QAs to see app performance as end-users do; devs mostly don't need
    // so, R8D8 shrinker is enabled only for remote builds
    def shouldEnableR8D8 = System.getenv("BRANCH_NAME") != null

    buildTypes {
        debug {
            minifyEnabled shouldEnableR8D8
            proguardFiles 'proguard-rules.pro'
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.ci
        }
        staging {
            initWith debug
            signingConfig signingConfigs.debug
            matchingFallbacks = ['debug']
            versionNameSuffix '-staging'
            applicationIdSuffix '.staging'
            //Init firebase
            def localReleaseNotes = releaseNotes()
            def localFirebaseGroup = firebaseGroup()
            firebaseAppDistribution {
                releaseNotes = localReleaseNotes
                groups = localFirebaseGroup
            }
        }
        develop {
            signingConfig signingConfigs.debug
            matchingFallbacks = ['debug']
            versionNameSuffix '-develop'
            applicationIdSuffix '.dev'
            //Init firebase
            def localReleaseNotes = releaseNotes()
            def localFirebaseGroup = firebaseGroup()
            firebaseAppDistribution {
              releaseNotes = localReleaseNotes
              groups = localFirebaseGroup
            }
        }
        pr {
            debuggable = true
            signingConfig signingConfigs.debug
            matchingFallbacks = ['debug']
            versionNameSuffix '-pr'
            applicationIdSuffix '.dev'
            //Init firebase
            def localReleaseNotes = releaseNotes()
            def localFirebaseGroup = firebaseGroup()
            firebaseAppDistribution {
              releaseNotes = localReleaseNotes
              groups = localFirebaseGroup
            }
        }
    }

    buildFeatures {
        viewBinding = true
        compose true
    }

    bundle {
        language {
            enableSplit = false
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        freeCompilerArgs = ["-Xallow-result-return-type"]

        jvmTarget = '17'
    }
    composeOptions {
        kotlinCompilerExtensionVersion composeCompilerVersion
    }
    lint {
        disable 'Instantiatable'
    }
    namespace 'jp.co.soramitsu.app'

    packagingOptions {
        resources.excludes.add("META-INF/**/*")
        resources.excludes.add("META-INF/*")
    }

    configurations.configureEach {
        exclude group: "org.bouncycastle", module: "bcprov-jdk15on"
    }
}

play {
    serviceAccountCredentials = file(System.env.CI_PLAY_KEY ?: "../key/fake.json")
    track = "production"
    releaseStatus = ReleaseStatus.DRAFT
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':core-db')
    implementation project(':common')
    implementation project(':feature-splash')

    implementation project(':feature-onboarding-api')
    implementation project(':feature-onboarding-impl')

    implementation project(':feature-account-api')
    implementation project(':feature-account-impl')

    implementation project(':feature-wallet-api')
    implementation project(':feature-wallet-impl')

    implementation project(':runtime')

    implementation project(':feature-staking-api')
    implementation project(':feature-staking-impl')

    implementation project(':feature-crowdloan-api')
    implementation project(':feature-crowdloan-impl')

    implementation project(':feature-polkaswap-api')
    implementation project(':feature-polkaswap-impl')

    implementation project(':feature-success-api')
    implementation project(':feature-success-impl')

    implementation project(':feature-soracard-api')
    implementation project(':feature-soracard-impl')

    implementation project(':feature-walletconnect-api')
    implementation project(':feature-walletconnect-impl')

    implementation project(':feature-nft-api')
    implementation project(':feature-nft-impl')

    implementation libs.kotlin.stdlib.jdk7

    implementation libs.appcompat
    implementation libs.constraintlayout

    implementation libs.zxing.embedded

    implementation libs.navigation.fragment.ktx
    implementation libs.navigation.ui.ktx

    implementation libs.room.runtime

    implementation libs.hilt.android
    kapt libs.hilt.compiler

    implementation libs.lifecycle.process
    kapt libs.lifecycle.compiler

    implementation libs.lifecycle.runtime.ktx

    implementation libs.converter.gson

//    implementation "pl.droidsonroids.gif:android-gif-drawable:1.2.25"

    compileOnly libs.nv.websocket.client

    implementation libs.coroutines.core

    testImplementation project(':test-shared')

    implementation libs.insetter.widgets

    implementation libs.lifecycle.livedata.ktx

    implementation libs.jna
    implementation libs.beacon.android.sdk, withoutJna

    kaptAndroidTest libs.hilt.compiler
    implementation libs.storiesProgressView

    implementation libs.bundles.compose
    debugImplementation libs.bundles.composeDebug

    implementation libs.sora.ui

    implementation platform(libs.walletconnectBomDep)
    implementation libs.walletconnectCoreDep
    implementation libs.walletconnectWeb3WalletDep

    androidTestImplementation libs.runner
    androidTestImplementation libs.rules
    androidTestImplementation libs.ext.junit
}

task printVersion {
  doLast {
    println "versionName:${computeVersionName()}"
  }
}
